from queue import Queue
from math import inf
G = [[42], [27, 32, 38, 43], [], [14, 25, 38, 42], [12, 23, 38], 
    [21, 30, 39, 46, 47], [1, 12, 47], [23], [30, 45, 50], [8, 17, 41],
    [4, 6, 32, 37], [], [12, 26], [4, 25], [12, 35, 45], [24, 29],
    [8, 12, 21, 30], [21, 43, 50], [8, 11, 40, 50], [4, 9, 15, 21, 49],
    [9, 12, 27], [24], [], [11, 36], [3, 22, 32], [7, 19, 27, 47, 50],
    [5], [9, 31], [11, 32, 40], [2, 5, 27], [6, 14, 33], [2, 11, 13, 18, 47], 
    [5], [2, 6, 9, 31], [9, 18], [18], [31, 35, 49], [49], [12, 30], [3, 35, 37, 47, 48],
    [1, 13, 19, 39], [21], [2, 37], [5, 12, 16, 18], [12],
    [13], [4, 6, 27, 36, 37, 44], [3], [5, 15, 25], [32, 37]]
def BFS(G,s):
    
    d = [inf] * len(g)
    d[s-1] = 0
    queue = Queue()
    queue.put(s)
    while not queue.empty():
        u = queue.get()
        for v in G[u-1]:
            if d[-1] == inf:
                d[v-1] = d[u-1] + 1
                queue.put(v)
    return d

#test